// automatically generated by Xtext
grammar ro.ubbcluj.cs.ealf.EAlf with org.eclipse.xtext.common.Terminals 

// import "platform:/resource/org.eclipse.uml2.uml/model/UML.ecore" 
import "http://www.eclipse.org/uml2/3.0.0/UML" as uml
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns uml::Model:
	(packagedElement+=PackageableElement (packagedElement+=PackageableElement)*)?;

PackageableElement returns uml::PackageableElement:
	Package_Impl | Class_Impl ;

Type returns uml::Type:
	Class_Impl;

Package returns uml::Package:
	Package_Impl;

ParameterableElement returns uml::ParameterableElement:
	Operation;

Classifier returns uml::Classifier:
	Class_Impl;

Property returns uml::Property:
	Property_Impl;

StructuralFeature returns uml::StructuralFeature:
	Property_Impl;

Package_Impl returns uml::Package:
	{uml::Package}
	'package' name=String0
	'{'
		(packagedElement+=PackageableElement (packagedElement+=PackageableElement)*)?
    '}';

Property_Impl returns uml::Property:
	{uml::Property}
	(visibility=VisibilityKind)? /*('static' isStatic=Boolean)?*/
	name=String0 ":" type=[uml::Type|EString] ";";

Operation returns uml::Operation:
	{uml::Operation}
	(visibility=VisibilityKind)? (concurrency=CallConcurrencyKind)?
	//('static' isStatic=Boolean)? ('abstract' isAbstract=Boolean)?
	name=String0
	'('
    ')';

Class_Impl returns uml::Class:
	{uml::Class}
	(visibility=VisibilityKind)? 'class'
	//('active' isActive=Boolean)? ('abstract' isAbstract=Boolean)?
	name=String0
	'{'
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedOperation' '{' ownedOperation+=Operation ( "," ownedOperation+=Operation)* '}' )?
    '}';

Integer returns uml::Integer:
	'Integer' /* TODO: implement this rule and an appropriate IValueConverter */;

String0 returns uml::String:
	STRING | ID /* TODO: implement this rule and an appropriate IValueConverter */;

Boolean returns uml::Boolean:
	'Boolean' /* TODO: implement this rule and an appropriate IValueConverter */;

UnlimitedNatural returns uml::UnlimitedNatural:
	'UnlimitedNatural' /* TODO: implement this rule and an appropriate IValueConverter */;

EString returns ecore::EString:
	STRING | ID;
	
ValueSpecification returns uml::ValueSpecification:
	LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | LiteralUnlimitedNatural;

LiteralInteger returns uml::LiteralInteger:
	{uml::LiteralInteger}
	'LiteralInteger'
	'{'
		('name' name=String0)?
		'value' value=Integer
    '}';

LiteralString returns uml::LiteralString:
	{uml::LiteralString}
	'LiteralString'
	'{'
		('name' name=String0)?
		('value' value=String0)?
    '}';

LiteralBoolean returns uml::LiteralBoolean:
	{uml::LiteralBoolean}
	'LiteralBoolean'
	'{'
		('name' name=String0)?
		'value' value=Boolean
    '}';

LiteralUnlimitedNatural returns uml::LiteralUnlimitedNatural:
	{uml::LiteralUnlimitedNatural}
	'LiteralUnlimitedNatural'
	'{'
		('name' name=String0)?
		'value' value=UnlimitedNatural
    '}';

LiteralNull returns uml::LiteralNull:
	{uml::LiteralNull}
	'LiteralNull'
	'{'
		('name' name=String0)?
    '}';

enum VisibilityKind returns uml::VisibilityKind:
	public = 'public' | private = 'private' | protected = 'protected' | package = 'package';

enum ParameterDirectionKind returns uml::ParameterDirectionKind:
	in = 'in' | inout = 'inout' | out = 'out' | return = 'return';

enum AggregationKind returns uml::AggregationKind:
	none = 'none' | shared = 'shared' | composite = 'composite';

enum CallConcurrencyKind returns uml::CallConcurrencyKind:
	sequential = 'sequential' | guarded = 'guarded' | concurrent = 'concurrent';
